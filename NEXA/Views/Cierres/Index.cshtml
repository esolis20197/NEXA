@model NEXA.ViewModels.CierreViewModel

@{
    ViewData["Title"] = "Cierre de Periodo";
}

<h1 class="mb-4 text-primary fw-bold"><i class="bi bi-graph-up"></i> Cierre de Periodo</h1>

<form method="post" id="formCierre">
    <input type="hidden" name="TipoCierre" id="TipoCierre" />
    <input type="hidden" name="FechaDesde" id="FechaDesde" />
    <input type="hidden" name="FechaHasta" id="FechaHasta" />

    <div class="mb-3">
        <label class="form-label fw-semibold">Cierre rápido</label>
        <div class="d-flex flex-wrap gap-2">
            <button type="button" class="btn btn-outline-primary rounded-pill px-4 py-2 shadow-sm" onclick="generarCierre('Diario')">
                <i class="bi bi-calendar-day me-1"></i> Diario
            </button>
            <button type="button" class="btn btn-outline-success rounded-pill px-4 py-2 shadow-sm" onclick="generarCierre('Semanal')">
                <i class="bi bi-calendar-week me-1"></i> Semanal
            </button>
            <button type="button" class="btn btn-outline-warning rounded-pill px-4 py-2 shadow-sm" onclick="generarCierre('Mensual')">
                <i class="bi bi-calendar3 me-1"></i> Mensual
            </button>
            <button type="button" class="btn btn-outline-danger rounded-pill px-4 py-2 shadow-sm" onclick="generarCierre('Anual')">
                <i class="bi bi-calendar4 me-1"></i> Anual
            </button>
        </div>
    </div>

    <div class="border rounded p-3 bg-light mb-3">
        <div class="row g-2 align-items-end">
            <div class="col-md-3">
                <label class="form-label fw-semibold">Desde</label>
                <input type="date" id="inputDesde" class="form-control" />
            </div>
            <div class="col-md-3">
                <label class="form-label fw-semibold">Hasta</label>
                <input type="date" id="inputHasta" class="form-control" />
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="button" class="btn btn-primary w-100 shadow" onclick="generarCierre('Rango')">
                    <i class="bi bi-calendar-range me-1"></i> Cierre por Rango
                </button>
            </div>
        </div>
    </div>
</form>

@if (Model.TotalGanancias > 0 || Model.TotalGastos > 0 || Model.TotalCuentasPorPagarPendientes > 0)
{
    <div class="card shadow-lg border-0 mt-4">
        <div class="card-header bg-gradient bg-primary text-white rounded-top py-3">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div>
                    <h4 class="mb-0 d-flex align-items-center">
                        <i class="bi bi-bar-chart-steps me-2"></i>
                        Resumen del Cierre
                    </h4>
                    <span class="badge bg-light text-primary fs-6 mt-2">@Model.RangoDescripcion</span>
                    <span class="badge bg-secondary ms-2">@Model.TipoCierre?.ToUpper()</span>
                </div>
                <div>
                    <form asp-action="ExportarExcel" method="post" class="d-inline">
                        <input type="hidden" name="TipoCierre" value="@Model.TipoCierre" />
                        <input type="hidden" name="FechaDesde" value="@Model.FechaDesde.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="FechaHasta" value="@Model.FechaHasta.ToString("yyyy-MM-dd")" />
                        <button type="submit" class="btn btn-success"><i class="bi bi-file-earmark-excel"></i> Excel</button>
                    </form>
                    <form asp-action="ExportarPdf" method="post" class="d-inline ms-2">
                        <input type="hidden" name="TipoCierre" value="@Model.TipoCierre" />
                        <input type="hidden" name="FechaDesde" value="@Model.FechaDesde.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="FechaHasta" value="@Model.FechaHasta.ToString("yyyy-MM-dd")" />
                        <button type="submit" class="btn btn-danger"><i class="bi bi-file-earmark-pdf"></i> PDF</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row text-center mb-4">
                <div class="col-md-4 mb-2">
                    <div class="fs-5 text-success"><i class="bi bi-cash-coin me-1"></i>Ganancias</div>
                    <div class="display-6 fw-bold">₡@Model.TotalGanancias.ToString("N2")</div>
                </div>
                <div class="col-md-4 mb-2">
                    <div class="fs-5 text-danger"><i class="bi bi-cart-dash me-1"></i>Gastos</div>
                    <div class="display-6 fw-bold">₡@Model.TotalGastos.ToString("N2")</div>
                </div>
                <div class="col-md-4 mb-2">
                    <div class="fs-5 text-warning"><i class="bi bi-exclamation-diamond me-1"></i>Pendientes</div>
                    <div class="display-6 fw-bold">₡@Model.TotalCuentasPorPagarPendientes.ToString("N2")</div>
                </div>
            </div>
            <hr class="my-4" />
            <div class="text-center mb-4">
                <h5 class="fw-bold">Balance Neto (Ganancias - Gastos):</h5>
                <span class="badge bg-gradient bg-success fs-4 px-3 py-2">
                    ₡@Model.Balance.ToString("N2")
                </span>
            </div>
            @if (Model.CuentasPendientesDetalle != null && Model.CuentasPendientesDetalle.Any())
            {
                <hr />
                <div class="mt-3">
                    <h5 class="fw-semibold mb-2"><i class="bi bi-journal-x me-1"></i> Cuentas por Pagar Pendientes Detalle</h5>
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm align-middle">
                            <thead class="table-secondary">
                                <tr>
                                    <th>Motivo</th>
                                    <th>Descripción</th>
                                    <th>Proveedor</th>
                                    <th>Monto</th>
                                    <th>Plazo para pagar</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.CuentasPendientesDetalle)
                                {
                                    <tr>
                                        <td>@item.NombreDeuda</td>
                                        <td>@item.Descripcion</td>
                                        <td>@item.Proveedor</td>
                                        <td>₡@item.Monto.ToString("N2")</td>
                                        <td>@item.PlazaParaPagar.ToString("dd/MM/yyyy")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
        function generarCierre(tipo) {
            const hoy = new Date();
            let desde = new Date();
            let hasta = new Date();

            switch (tipo) {
                case "Diario":
                    break;
                case "Semanal":
                    const day = hoy.getDay();
                    const diff = day === 0 ? 6 : day - 1;
                    desde.setDate(hoy.getDate() - diff);
                    hasta = new Date(desde);
                    hasta.setDate(desde.getDate() + 6);
                    break;
                case "Mensual":
                    desde = new Date(hoy.getFullYear(), hoy.getMonth(), 1);
                    break;
                case "Anual":
                    desde = new Date(hoy.getFullYear(), 0, 1);
                    break;
                case "Rango":
                    const fDesde = document.getElementById('inputDesde').value;
                    const fHasta = document.getElementById('inputHasta').value;
                    if (!fDesde || !fHasta) {
                        alert("Por favor seleccione ambas fechas para el rango.");
                        return;
                    }
                    desde = new Date(fDesde);
                    hasta = new Date(fHasta);
                    break;
            }

            document.getElementById('TipoCierre').value = tipo;
            document.getElementById('FechaDesde').value = desde.toISOString().slice(0, 10);
            document.getElementById('FechaHasta').value = hasta.toISOString().slice(0, 10);

            document.getElementById('formCierre').submit();
        }
    </script>
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />
